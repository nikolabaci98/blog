import { unified } from 'unified';
import rehypeParse from 'rehype-parse';
import rehypeRemark from 'rehype-remark';
import remarkStringify from 'remark-stringify';
import rehypeIgnore from 'rehype-ignore';
import rehypeFormat from 'rehype-format';
import remarkGfm from 'remark-gfm';
import rehypeVideo from 'rehype-video';
export default async function htmlToMarkdown(options = {}) {
    const { rehypeParseOption, remarkPlugins = [], rehypePlugins = [] } = options;
    const file = await unified()
        .use(rehypeParse, { fragment: true, ...rehypeParseOption })
        .use(rehypeRemark)
        .use(rehypeIgnore)
        .use(remarkGfm)
        .use(rehypeVideo)
        .use(rehypeFormat)
        .use(remarkPlugins || [])
        .use(rehypePlugins || [])
        .use(remarkStringify)
        .processSync(options.html);
    return String(file);
}
//# sourceMappingURL=index.js.map